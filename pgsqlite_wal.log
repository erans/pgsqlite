[2m2025-08-06T01:53:04.436840Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m pgsqlite v0.0.13
[2m2025-08-06T01:53:04.436943Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m New database file detected, will run initial migrations...
[2m2025-08-06T01:53:04.441230Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Running initial migrations...
[2m2025-08-06T01:53:04.443463Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 1: Create initial pgsqlite system tables
[2m2025-08-06T01:53:04.443972Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 1 completed in 0ms
[2m2025-08-06T01:53:04.444026Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 2: Add PostgreSQL ENUM type support
[2m2025-08-06T01:53:04.444733Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 2 completed in 0ms
[2m2025-08-06T01:53:04.444782Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 3: Add datetime format and timezone metadata for PostgreSQL datetime types
[2m2025-08-06T01:53:04.445551Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 3 completed in 0ms
[2m2025-08-06T01:53:04.445598Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 4: Convert all datetime types to INTEGER storage using microseconds
[2m2025-08-06T01:53:04.445793Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 4 completed in 0ms
[2m2025-08-06T01:53:04.445839Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 5: Create PostgreSQL-compatible catalog tables and views for psql compatibility
[2m2025-08-06T01:53:04.601486Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 5 completed in 155ms
[2m2025-08-06T01:53:04.601560Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 6: Add support for VARCHAR/CHAR length constraints
[2m2025-08-06T01:53:04.602462Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 6 completed in 0ms
[2m2025-08-06T01:53:04.602513Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 7: Add support for NUMERIC/DECIMAL precision and scale constraints
[2m2025-08-06T01:53:04.602884Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 7 completed in 0ms
[2m2025-08-06T01:53:04.602932Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 8: Add support for PostgreSQL array types
[2m2025-08-06T01:53:04.603847Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 8 completed in 0ms
[2m2025-08-06T01:53:04.603896Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 9: Add PostgreSQL Full-Text Search support using FTS5
[2m2025-08-06T01:53:04.606220Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 9 completed in 2ms
[2m2025-08-06T01:53:04.606271Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 10: Add typcategory column to pg_type view for PostgreSQL compatibility
[2m2025-08-06T01:53:04.607376Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 10 completed in 0ms
[2m2025-08-06T01:53:04.607425Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 11: Replace oid_hash function with built-in SQLite functions in catalog views
[2m2025-08-06T01:53:04.608231Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 11 completed in 0ms
[2m2025-08-06T01:53:04.611955Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Unix socket created at: /tmp/.s.PGSQL.15500
Error: Address already in use (os error 98)

    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.22s
     Running `target/debug/pgsqlite --database /tmp/test5.db --port 5437`
[2m2025-07-24T05:27:21.686240Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m pgsqlite v0.0.11
[2m2025-07-24T05:27:21.691057Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m New database file detected, running initial migrations...
[2m2025-07-24T05:27:21.694614Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 1: Create initial pgsqlite system tables
[2m2025-07-24T05:27:21.695415Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 1 completed in 0ms
[2m2025-07-24T05:27:21.695500Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 2: Add PostgreSQL ENUM type support
[2m2025-07-24T05:27:21.696622Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 2 completed in 0ms
[2m2025-07-24T05:27:21.696705Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 3: Add datetime format and timezone metadata for PostgreSQL datetime types
[2m2025-07-24T05:27:21.698129Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 3 completed in 1ms
[2m2025-07-24T05:27:21.698203Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 4: Convert all datetime types to INTEGER storage using microseconds
[2m2025-07-24T05:27:21.698492Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 4 completed in 0ms
[2m2025-07-24T05:27:21.698554Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 5: Create PostgreSQL-compatible catalog tables and views for psql compatibility
[2m2025-07-24T05:27:21.997575Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 5 completed in 298ms
[2m2025-07-24T05:27:21.997735Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 6: Add support for VARCHAR/CHAR length constraints
[2m2025-07-24T05:27:21.999443Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 6 completed in 1ms
[2m2025-07-24T05:27:21.999519Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 7: Add support for NUMERIC/DECIMAL precision and scale constraints
[2m2025-07-24T05:27:22.000130Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 7 completed in 0ms
[2m2025-07-24T05:27:22.000201Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Applying migration 8: Add support for PostgreSQL array types
[2m2025-07-24T05:27:22.001938Z[0m [32m INFO[0m [2mpgsqlite::migration::runner[0m[2m:[0m Migration 8 completed in 1ms
[2m2025-07-24T05:27:22.002052Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Applied 8 migrations to new database
[2m2025-07-24T05:27:22.002916Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m DbHandler initialized with mutex-based implementation
[2m2025-07-24T05:27:22.003429Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Unix socket created at: /tmp/.s.PGSQL.5437
[2m2025-07-24T05:27:22.003521Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m TCP server listening on port 5437
[2m2025-07-24T05:27:22.003531Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Using database: /tmp/test5.db
[2m2025-07-24T05:27:22.003540Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m SSL disabled - using unencrypted connections
[2m2025-07-24T05:27:22.006824Z[0m [32m INFO[0m [2mpgsqlite::cache::status[0m[2m:[0m Query Cache Status - Total: 0, Hits: 0 (0.0%), Misses: 0, Evictions: 0, Size: 0/1000
[2m2025-07-24T05:27:29.560831Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m New TCP connection from 127.0.0.1:53288
[2m2025-07-24T05:27:29.561052Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Handling TCP connection from 127.0.0.1:53288
[2m2025-07-24T05:27:29.561216Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Rejected SSL request from 127.0.0.1:53288 (SSL disabled)
[2m2025-07-24T05:27:29.561299Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received startup message from 127.0.0.1:53288: StartupMessage { protocol_version: 196608, parameters: {"user": "postgres", "database": "main"} }
[2m2025-07-24T05:27:29.561656Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Sent authentication and ready response to 127.0.0.1:53288
[2m2025-07-24T05:27:29.561956Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: BEGIN
[2m2025-07-24T05:27:29.562046Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: BEGIN
[2m2025-07-24T05:27:29.622868Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Begin for query: BEGIN
[2m2025-07-24T05:27:29.638261Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT t.oid, typarray
FROM pg_type t JOIN pg_namespace ns
    ON typnamespace = ns.oid
WHERE typname = 'hstore';

[2m2025-07-24T05:27:29.638311Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT t.oid, typarray
FROM pg_type t JOIN pg_namespace ns
    ON typnamespace = ns.oid
WHERE typname = 'hstore';
[2m2025-07-24T05:27:29.641331Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT t.oid, typarray
FROM pg_type t JOIN pg_namespace ns
    ON typnamespace = ns.oid
WHERE typname = 'hstore';
[2m2025-07-24T05:27:29.641350Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT t.oid, typarray
FROM pg_type t JOIN pg_namespace ns
    ON typnamespace = ns.oid
WHERE typname = 'hstore';
[2m2025-07-24T05:27:29.641364Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT t.oid, typarray
FROM pg_type t JOIN pg_namespace ns
    ON typnamespace = ns.oid
WHERE typname = 'hstore';
[2m2025-07-24T05:27:29.641374Z[0m [32m INFO[0m [2mpgsqlite::catalog::query_interceptor[0m[2m:[0m Intercepting catalog query: SELECT t.oid, typarray
FROM pg_type t JOIN pg_namespace ns
    ON typnamespace = ns.oid
WHERE typname = 'hstore';
[2m2025-07-24T05:27:29.643331Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("pg_type") for query: SELECT t.oid, typarray
FROM pg_type t JOIN pg_namespace ns
    ON typnamespace = ns.oid
WHERE typname = 'hstore';
[2m2025-07-24T05:27:29.643353Z[0m [32m INFO[0m [2mpgsqlite::cache::row_description[0m[2m:[0m Initializing RowDescription cache with capacity 1000 and TTL 10 minutes
[2m2025-07-24T05:27:29.643365Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'pg_type', looking up schema for 2 columns
[2m2025-07-24T05:27:29.648043Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: No schema type found for 'pg_type.oid'
[2m2025-07-24T05:27:29.648066Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: No schema type found for 'pg_type.typarray'
[2m2025-07-24T05:27:29.664698Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 36 rows
[2m2025-07-24T05:27:29.664733Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25, 25]
[2m2025-07-24T05:27:29.664742Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:29.664756Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:29.665142Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: ROLLBACK
[2m2025-07-24T05:27:29.665155Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: ROLLBACK
[2m2025-07-24T05:27:29.665223Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Rollback for query: ROLLBACK
[2m2025-07-24T05:27:29.665656Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: BEGIN
[2m2025-07-24T05:27:29.665666Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: BEGIN
[2m2025-07-24T05:27:29.665701Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Begin for query: BEGIN
[2m2025-07-24T05:27:29.665873Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: select pg_catalog.version()
[2m2025-07-24T05:27:29.665906Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: select pg_catalog.version()
[2m2025-07-24T05:27:29.667572Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: select pg_catalog.version()
[2m2025-07-24T05:27:29.667580Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: select pg_catalog.version()
[2m2025-07-24T05:27:29.667584Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: select pg_catalog.version()
[2m2025-07-24T05:27:29.667591Z[0m [32m INFO[0m [2mpgsqlite::catalog::query_interceptor[0m[2m:[0m Intercepting catalog query: select pg_catalog.version()
[2m2025-07-24T05:27:29.667712Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: select version()
[2m2025-07-24T05:27:29.667967Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'select version()': pattern=ComplexQuery, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:29.668026Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 1 rows
[2m2025-07-24T05:27:29.668032Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: select version()
[2m2025-07-24T05:27:29.669995Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: None for query: select pg_catalog.version()
[2m2025-07-24T05:27:29.670065Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 1 rows
[2m2025-07-24T05:27:29.670073Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:29.670079Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:29.670088Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:29.670607Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: select current_schema()
[2m2025-07-24T05:27:29.670618Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: select current_schema()
[2m2025-07-24T05:27:29.671079Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: select current_schema()
[2m2025-07-24T05:27:29.671087Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: select current_schema()
[2m2025-07-24T05:27:29.671090Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: select current_schema()
[2m2025-07-24T05:27:29.671100Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: select current_schema()
[2m2025-07-24T05:27:29.671642Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'select current_schema()': pattern=ComplexQuery, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:29.671681Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 1 rows
[2m2025-07-24T05:27:29.671685Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: select current_schema()
[2m2025-07-24T05:27:29.672900Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: None for query: select current_schema()
[2m2025-07-24T05:27:29.672942Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 1 rows
[2m2025-07-24T05:27:29.672957Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:29.672961Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:29.672967Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:29.673079Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: show transaction isolation level
[2m2025-07-24T05:27:29.673088Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: show transaction isolation level
[2m2025-07-24T05:27:29.673289Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Other for query: show transaction isolation level
[2m2025-07-24T05:27:29.676891Z[0m [32m INFO[0m [2mpgsqlite::query::set_handler[0m[2m:[0m SHOW parameter: TRANSACTION ISOLATION LEVEL
[2m2025-07-24T05:27:29.676903Z[0m [32m INFO[0m [2mpgsqlite::query::set_handler[0m[2m:[0m Parameter TRANSACTION ISOLATION LEVEL = read committed
[2m2025-07-24T05:27:29.677028Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: show standard_conforming_strings
[2m2025-07-24T05:27:29.677037Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: show standard_conforming_strings
[2m2025-07-24T05:27:29.677105Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Other for query: show standard_conforming_strings
[2m2025-07-24T05:27:29.677131Z[0m [32m INFO[0m [2mpgsqlite::query::set_handler[0m[2m:[0m SHOW parameter: STANDARD_CONFORMING_STRINGS
[2m2025-07-24T05:27:29.677134Z[0m [32m INFO[0m [2mpgsqlite::query::set_handler[0m[2m:[0m Parameter STANDARD_CONFORMING_STRINGS = on
[2m2025-07-24T05:27:29.677261Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: ROLLBACK
[2m2025-07-24T05:27:29.677270Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: ROLLBACK
[2m2025-07-24T05:27:29.677300Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Rollback for query: ROLLBACK
[2m2025-07-24T05:27:29.677820Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: BEGIN
[2m2025-07-24T05:27:29.677833Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: BEGIN
[2m2025-07-24T05:27:29.677857Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Begin for query: BEGIN
[2m2025-07-24T05:27:29.677929Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT version()
[2m2025-07-24T05:27:29.677937Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT version()
[2m2025-07-24T05:27:29.678011Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT version()
[2m2025-07-24T05:27:29.678014Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT version()
[2m2025-07-24T05:27:29.678017Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT version()
[2m2025-07-24T05:27:29.678025Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT version()
[2m2025-07-24T05:27:29.678082Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT version()': pattern=ComplexQuery, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:29.678106Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 1 rows
[2m2025-07-24T05:27:29.678109Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT version()
[2m2025-07-24T05:27:29.679259Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: None for query: SELECT version()
[2m2025-07-24T05:27:29.679302Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 1 rows
[2m2025-07-24T05:27:29.679309Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:29.679313Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:29.679319Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:29.679478Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT current_database()
[2m2025-07-24T05:27:29.679487Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT current_database()
[2m2025-07-24T05:27:29.679637Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT current_database()
[2m2025-07-24T05:27:29.679641Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT current_database()
[2m2025-07-24T05:27:29.679644Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT current_database()
[2m2025-07-24T05:27:29.679652Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT current_database()
[2m2025-07-24T05:27:29.679760Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT current_database()': pattern=ComplexQuery, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:29.679788Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 1 rows
[2m2025-07-24T05:27:29.679791Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT current_database()
[2m2025-07-24T05:27:29.680921Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: None for query: SELECT current_database()
[2m2025-07-24T05:27:29.680963Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 1 rows
[2m2025-07-24T05:27:29.680969Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:29.680974Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:29.680980Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:29.681116Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT current_user()
[2m2025-07-24T05:27:29.681125Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT current_user()
[2m2025-07-24T05:27:29.681211Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT current_user()
[2m2025-07-24T05:27:29.681215Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT current_user()
[2m2025-07-24T05:27:29.681218Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT current_user()
[2m2025-07-24T05:27:29.681226Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT current_user()
[2m2025-07-24T05:27:29.681285Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT current_user()': pattern=ComplexQuery, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:29.681308Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 1 rows
[2m2025-07-24T05:27:29.681311Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT current_user()
[2m2025-07-24T05:27:29.682443Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: None for query: SELECT current_user()
[2m2025-07-24T05:27:29.682485Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 1 rows
[2m2025-07-24T05:27:29.682491Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:29.682496Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:29.682502Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:29.682723Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT current_schema()
[2m2025-07-24T05:27:29.682735Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT current_schema()
[2m2025-07-24T05:27:29.682815Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT current_schema()
[2m2025-07-24T05:27:29.682819Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT current_schema()
[2m2025-07-24T05:27:29.682822Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT current_schema()
[2m2025-07-24T05:27:29.682830Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT current_schema()
[2m2025-07-24T05:27:29.682888Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT current_schema()': pattern=ComplexQuery, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:29.682910Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 1 rows
[2m2025-07-24T05:27:29.682913Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT current_schema()
[2m2025-07-24T05:27:29.684039Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: None for query: SELECT current_schema()
[2m2025-07-24T05:27:29.684080Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 1 rows
[2m2025-07-24T05:27:29.684086Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:29.684091Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:29.684097Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:29.684203Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: ROLLBACK
[2m2025-07-24T05:27:29.684212Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: ROLLBACK
[2m2025-07-24T05:27:29.684240Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Rollback for query: ROLLBACK
[2m2025-07-24T05:27:29.684597Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT 1
[2m2025-07-24T05:27:29.684607Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT 1
[2m2025-07-24T05:27:29.684635Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT 1
[2m2025-07-24T05:27:29.684638Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT 1
[2m2025-07-24T05:27:29.684641Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT 1
[2m2025-07-24T05:27:29.684647Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT 1
[2m2025-07-24T05:27:29.684678Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT 1': pattern=ComplexQuery, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:29.684702Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 1 rows
[2m2025-07-24T05:27:29.684705Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT 1
[2m2025-07-24T05:27:29.685919Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: None for query: SELECT 1
[2m2025-07-24T05:27:29.693278Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 1 rows
[2m2025-07-24T05:27:29.693296Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:29.693302Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:29.693311Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:29.695579Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: BEGIN
[2m2025-07-24T05:27:29.695596Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: BEGIN
[2m2025-07-24T05:27:29.695652Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Begin for query: BEGIN
[2m2025-07-24T05:27:29.695752Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'users' AND pg_catalog.pg_class.relkind = ANY (ARRAY['r', 'p', 'f', 'v', 'm']) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.695771Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'users' AND pg_catalog.pg_class.relkind = ANY (ARRAY['r', 'p', 'f', 'v', 'm']) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.812689Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query after array operator translation: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'users' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.822705Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'users' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.822733Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'users' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.822740Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'users' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.822762Z[0m [32m INFO[0m [2mpgsqlite::catalog::query_interceptor[0m[2m:[0m Intercepting catalog query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'users' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.825150Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'users' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'
[2m2025-07-24T05:27:29.825690Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'users' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'': pattern=JoinWithWhere, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:29.825882Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 0 rows
[2m2025-07-24T05:27:29.825891Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'users' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'
[2m2025-07-24T05:27:29.827388Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("pg_catalog.pg_class") for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'users' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.827413Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'pg_catalog.pg_class', looking up schema for 1 columns
[2m2025-07-24T05:27:29.832198Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: No schema type found for 'pg_catalog.pg_class.relname'
[2m2025-07-24T05:27:29.840560Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 0 rows
[2m2025-07-24T05:27:29.840577Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:29.840583Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:29.840590Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:29.841015Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'categories' AND pg_catalog.pg_class.relkind = ANY (ARRAY['r', 'p', 'f', 'v', 'm']) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.841047Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'categories' AND pg_catalog.pg_class.relkind = ANY (ARRAY['r', 'p', 'f', 'v', 'm']) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.849606Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query after array operator translation: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'categories' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.859244Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'categories' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.859272Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'categories' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.859281Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'categories' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.859290Z[0m [32m INFO[0m [2mpgsqlite::catalog::query_interceptor[0m[2m:[0m Intercepting catalog query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'categories' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.859747Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'categories' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'
[2m2025-07-24T05:27:29.859930Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'categories' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'': pattern=JoinWithWhere, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:29.860215Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 0 rows
[2m2025-07-24T05:27:29.860221Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'categories' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'
[2m2025-07-24T05:27:29.861798Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("pg_catalog.pg_class") for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'categories' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.861822Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'pg_catalog.pg_class', looking up schema for 1 columns
[2m2025-07-24T05:27:29.866598Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: No schema type found for 'pg_catalog.pg_class.relname'
[2m2025-07-24T05:27:29.875015Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 0 rows
[2m2025-07-24T05:27:29.875031Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:29.875037Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:29.875044Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:29.875376Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'posts' AND pg_catalog.pg_class.relkind = ANY (ARRAY['r', 'p', 'f', 'v', 'm']) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.875396Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'posts' AND pg_catalog.pg_class.relkind = ANY (ARRAY['r', 'p', 'f', 'v', 'm']) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.883990Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query after array operator translation: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'posts' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.893525Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'posts' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.893544Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'posts' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.893549Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'posts' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.893555Z[0m [32m INFO[0m [2mpgsqlite::catalog::query_interceptor[0m[2m:[0m Intercepting catalog query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'posts' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.893923Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'posts' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'
[2m2025-07-24T05:27:29.894050Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'posts' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'': pattern=JoinWithWhere, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:29.894235Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 0 rows
[2m2025-07-24T05:27:29.894240Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'posts' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'
[2m2025-07-24T05:27:29.895696Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("pg_catalog.pg_class") for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'posts' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.895724Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'pg_catalog.pg_class', looking up schema for 1 columns
[2m2025-07-24T05:27:29.900568Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: No schema type found for 'pg_catalog.pg_class.relname'
[2m2025-07-24T05:27:29.908865Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 0 rows
[2m2025-07-24T05:27:29.908889Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:29.908895Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:29.908901Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:29.909232Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'products' AND pg_catalog.pg_class.relkind = ANY (ARRAY['r', 'p', 'f', 'v', 'm']) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.909253Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'products' AND pg_catalog.pg_class.relkind = ANY (ARRAY['r', 'p', 'f', 'v', 'm']) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.917818Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query after array operator translation: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'products' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.927424Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'products' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.927440Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'products' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.927445Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'products' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.927454Z[0m [32m INFO[0m [2mpgsqlite::catalog::query_interceptor[0m[2m:[0m Intercepting catalog query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'products' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.927917Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'products' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'
[2m2025-07-24T05:27:29.928049Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'products' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'': pattern=JoinWithWhere, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:29.928276Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 0 rows
[2m2025-07-24T05:27:29.928282Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'products' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'
[2m2025-07-24T05:27:29.929753Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("pg_catalog.pg_class") for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'products' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.929784Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'pg_catalog.pg_class', looking up schema for 1 columns
[2m2025-07-24T05:27:29.934564Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: No schema type found for 'pg_catalog.pg_class.relname'
[2m2025-07-24T05:27:29.942855Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 0 rows
[2m2025-07-24T05:27:29.942881Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:29.942887Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:29.942894Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:29.943230Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'orders' AND pg_catalog.pg_class.relkind = ANY (ARRAY['r', 'p', 'f', 'v', 'm']) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.943251Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'orders' AND pg_catalog.pg_class.relkind = ANY (ARRAY['r', 'p', 'f', 'v', 'm']) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.951866Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query after array operator translation: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'orders' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.961398Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'orders' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.961409Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'orders' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.961414Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'orders' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.961422Z[0m [32m INFO[0m [2mpgsqlite::catalog::query_interceptor[0m[2m:[0m Intercepting catalog query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'orders' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.961825Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'orders' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'
[2m2025-07-24T05:27:29.961948Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'orders' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'': pattern=JoinWithWhere, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:29.962151Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 0 rows
[2m2025-07-24T05:27:29.962156Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'orders' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'
[2m2025-07-24T05:27:29.963638Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("pg_catalog.pg_class") for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'orders' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.963656Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'pg_catalog.pg_class', looking up schema for 1 columns
[2m2025-07-24T05:27:29.968441Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: No schema type found for 'pg_catalog.pg_class.relname'
[2m2025-07-24T05:27:29.976660Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 0 rows
[2m2025-07-24T05:27:29.976678Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:29.976684Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:29.976690Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:29.976993Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'order_items' AND pg_catalog.pg_class.relkind = ANY (ARRAY['r', 'p', 'f', 'v', 'm']) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.977015Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'order_items' AND pg_catalog.pg_class.relkind = ANY (ARRAY['r', 'p', 'f', 'v', 'm']) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.985651Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query after array operator translation: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'order_items' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.995159Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'order_items' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.995171Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'order_items' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.995184Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'order_items' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.995192Z[0m [32m INFO[0m [2mpgsqlite::catalog::query_interceptor[0m[2m:[0m Intercepting catalog query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'order_items' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.995593Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'order_items' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'
[2m2025-07-24T05:27:29.995728Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'order_items' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'': pattern=JoinWithWhere, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:29.995941Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 0 rows
[2m2025-07-24T05:27:29.995947Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT pg_class.relname FROM pg_class JOIN pg_namespace ON pg_namespace.oid = pg_class.relnamespace WHERE pg_class.relname = 'order_items' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_class.relkind) AND '1' AND pg_namespace.nspname <> 'pg_catalog'
[2m2025-07-24T05:27:29.997407Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("pg_catalog.pg_class") for query: SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = 'order_items' AND EXISTS (SELECT 1 FROM json_each('["r","p","f","v","m"]') WHERE value = pg_catalog.pg_class.relkind) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != 'pg_catalog'
[2m2025-07-24T05:27:29.997427Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'pg_catalog.pg_class', looking up schema for 1 columns
[2m2025-07-24T05:27:30.002198Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: No schema type found for 'pg_catalog.pg_class.relname'
[2m2025-07-24T05:27:30.010402Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 0 rows
[2m2025-07-24T05:27:30.010422Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:30.010437Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.010442Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.011265Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: 
CREATE TABLE users (
	id SERIAL NOT NULL, 
	username VARCHAR(50) NOT NULL, 
	email VARCHAR(100) NOT NULL, 
	full_name VARCHAR(100), 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	birth_date DATE, 
	PRIMARY KEY (id), 
	UNIQUE (username), 
	UNIQUE (email)
)


[2m2025-07-24T05:27:30.011286Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: CREATE TABLE users (
	id SERIAL NOT NULL, 
	username VARCHAR(50) NOT NULL, 
	email VARCHAR(100) NOT NULL, 
	full_name VARCHAR(100), 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	birth_date DATE, 
	PRIMARY KEY (id), 
	UNIQUE (username), 
	UNIQUE (email)
)
[2m2025-07-24T05:27:30.012030Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Create for query: CREATE TABLE users (
	id SERIAL NOT NULL, 
	username VARCHAR(50) NOT NULL, 
	email VARCHAR(100) NOT NULL, 
	full_name VARCHAR(100), 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	birth_date DATE, 
	PRIMARY KEY (id), 
	UNIQUE (username), 
	UNIQUE (email)
)
[2m2025-07-24T05:27:30.020213Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type mappings count: 7
[2m2025-07-24T05:27:30.020535Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Successfully created/verified __pgsqlite_schema table
[2m2025-07-24T05:27:30.020888Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: users.id -> SERIAL (INTEGER PRIMARY KEY AUTOINCREMENT)
[2m2025-07-24T05:27:30.021074Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: users.username -> VARCHAR(50) (TEXT)
[2m2025-07-24T05:27:30.021301Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored string constraint: users.username max_length=50
[2m2025-07-24T05:27:30.021477Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: users.email -> VARCHAR(100) (TEXT)
[2m2025-07-24T05:27:30.021675Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored string constraint: users.email max_length=100
[2m2025-07-24T05:27:30.021859Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: users.full_name -> VARCHAR(100) (TEXT)
[2m2025-07-24T05:27:30.022068Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored string constraint: users.full_name max_length=100
[2m2025-07-24T05:27:30.022242Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: users.is_active -> BOOLEAN (INTEGER)
[2m2025-07-24T05:27:30.022416Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: users.created_at -> TIMESTAMP WITHOUT TIME ZONE (INTEGER)
[2m2025-07-24T05:27:30.022597Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: users.birth_date -> DATE (INTEGER)
[2m2025-07-24T05:27:30.022602Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored type mappings for table users (simple query protocol)
[2m2025-07-24T05:27:30.022611Z[0m [32m INFO[0m [2mpgsqlite::catalog::constraint_populator[0m[2m:[0m Populating constraints for table: users
[2m2025-07-24T05:27:30.052995Z[0m [32m INFO[0m [2mpgsqlite::catalog::constraint_populator[0m[2m:[0m Successfully populated constraints for table: users
[2m2025-07-24T05:27:30.053022Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Successfully populated constraint catalog tables for table: users
[2m2025-07-24T05:27:30.053661Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: 
CREATE TABLE categories (
	id SERIAL NOT NULL, 
	name VARCHAR(50) NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name)
)


[2m2025-07-24T05:27:30.053688Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: CREATE TABLE categories (
	id SERIAL NOT NULL, 
	name VARCHAR(50) NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name)
)
[2m2025-07-24T05:27:30.054038Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Create for query: CREATE TABLE categories (
	id SERIAL NOT NULL, 
	name VARCHAR(50) NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name)
)
[2m2025-07-24T05:27:30.062707Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type mappings count: 4
[2m2025-07-24T05:27:30.062793Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Successfully created/verified __pgsqlite_schema table
[2m2025-07-24T05:27:30.063042Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: categories.id -> SERIAL (INTEGER PRIMARY KEY AUTOINCREMENT)
[2m2025-07-24T05:27:30.063241Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: categories.created_at -> TIMESTAMP WITHOUT TIME ZONE (INTEGER)
[2m2025-07-24T05:27:30.063413Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: categories.name -> VARCHAR(50) (TEXT)
[2m2025-07-24T05:27:30.063628Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored string constraint: categories.name max_length=50
[2m2025-07-24T05:27:30.063815Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: categories.description -> TEXT (TEXT)
[2m2025-07-24T05:27:30.063821Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored type mappings for table categories (simple query protocol)
[2m2025-07-24T05:27:30.063831Z[0m [32m INFO[0m [2mpgsqlite::catalog::constraint_populator[0m[2m:[0m Populating constraints for table: categories
[2m2025-07-24T05:27:30.093860Z[0m [32m INFO[0m [2mpgsqlite::catalog::constraint_populator[0m[2m:[0m Successfully populated constraints for table: categories
[2m2025-07-24T05:27:30.093884Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Successfully populated constraint catalog tables for table: categories
[2m2025-07-24T05:27:30.094568Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: 
CREATE TABLE products (
	id SERIAL NOT NULL, 
	name VARCHAR(100) NOT NULL, 
	description TEXT, 
	price NUMERIC(10, 2) NOT NULL, 
	stock_quantity INTEGER, 
	is_available BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


[2m2025-07-24T05:27:30.094586Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: CREATE TABLE products (
	id SERIAL NOT NULL, 
	name VARCHAR(100) NOT NULL, 
	description TEXT, 
	price NUMERIC(10, 2) NOT NULL, 
	stock_quantity INTEGER, 
	is_available BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)
[2m2025-07-24T05:27:30.094966Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Create for query: CREATE TABLE products (
	id SERIAL NOT NULL, 
	name VARCHAR(100) NOT NULL, 
	description TEXT, 
	price NUMERIC(10, 2) NOT NULL, 
	stock_quantity INTEGER, 
	is_available BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)
[2m2025-07-24T05:27:30.103474Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type mappings count: 7
[2m2025-07-24T05:27:30.103532Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Successfully created/verified __pgsqlite_schema table
[2m2025-07-24T05:27:30.103752Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: products.is_available -> BOOLEAN (INTEGER)
[2m2025-07-24T05:27:30.103951Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: products.created_at -> TIMESTAMP WITHOUT TIME ZONE (INTEGER)
[2m2025-07-24T05:27:30.104142Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: products.id -> SERIAL (INTEGER PRIMARY KEY AUTOINCREMENT)
[2m2025-07-24T05:27:30.104303Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: products.price -> NUMERIC(10,2) (DECIMAL)
[2m2025-07-24T05:27:30.104517Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored numeric constraint: products.price precision=10 scale=2
[2m2025-07-24T05:27:30.104690Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: products.stock_quantity -> INTEGER (INTEGER)
[2m2025-07-24T05:27:30.104865Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: products.name -> VARCHAR(100) (TEXT)
[2m2025-07-24T05:27:30.105077Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored string constraint: products.name max_length=100
[2m2025-07-24T05:27:30.105244Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: products.description -> TEXT (TEXT)
[2m2025-07-24T05:27:30.105248Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored type mappings for table products (simple query protocol)
[2m2025-07-24T05:27:30.105256Z[0m [32m INFO[0m [2mpgsqlite::catalog::constraint_populator[0m[2m:[0m Populating constraints for table: products
[2m2025-07-24T05:27:30.134545Z[0m [32m INFO[0m [2mpgsqlite::catalog::constraint_populator[0m[2m:[0m Successfully populated constraints for table: products
[2m2025-07-24T05:27:30.134558Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Successfully populated constraint catalog tables for table: products
[2m2025-07-24T05:27:30.135419Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: 
CREATE TABLE posts (
	id SERIAL NOT NULL, 
	title VARCHAR(200) NOT NULL, 
	content TEXT, 
	author_id INTEGER NOT NULL, 
	category_id INTEGER, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	view_count INTEGER, 
	is_published BOOLEAN, 
	PRIMARY KEY (id), 
	FOREIGN KEY(author_id) REFERENCES users (id), 
	FOREIGN KEY(category_id) REFERENCES categories (id)
)


[2m2025-07-24T05:27:30.135442Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: CREATE TABLE posts (
	id SERIAL NOT NULL, 
	title VARCHAR(200) NOT NULL, 
	content TEXT, 
	author_id INTEGER NOT NULL, 
	category_id INTEGER, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	view_count INTEGER, 
	is_published BOOLEAN, 
	PRIMARY KEY (id), 
	FOREIGN KEY(author_id) REFERENCES users (id), 
	FOREIGN KEY(category_id) REFERENCES categories (id)
)
[2m2025-07-24T05:27:30.136088Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Create for query: CREATE TABLE posts (
	id SERIAL NOT NULL, 
	title VARCHAR(200) NOT NULL, 
	content TEXT, 
	author_id INTEGER NOT NULL, 
	category_id INTEGER, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	view_count INTEGER, 
	is_published BOOLEAN, 
	PRIMARY KEY (id), 
	FOREIGN KEY(author_id) REFERENCES users (id), 
	FOREIGN KEY(category_id) REFERENCES categories (id)
)
[2m2025-07-24T05:27:30.145267Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type mappings count: 9
[2m2025-07-24T05:27:30.145328Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Successfully created/verified __pgsqlite_schema table
[2m2025-07-24T05:27:30.145542Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: posts.updated_at -> TIMESTAMP WITHOUT TIME ZONE (INTEGER)
[2m2025-07-24T05:27:30.145749Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: posts.id -> SERIAL (INTEGER PRIMARY KEY AUTOINCREMENT)
[2m2025-07-24T05:27:30.145931Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: posts.view_count -> INTEGER (INTEGER)
[2m2025-07-24T05:27:30.146101Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: posts.author_id -> INTEGER (INTEGER)
[2m2025-07-24T05:27:30.146278Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: posts.title -> VARCHAR(200) (TEXT)
[2m2025-07-24T05:27:30.146486Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored string constraint: posts.title max_length=200
[2m2025-07-24T05:27:30.146656Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: posts.is_published -> BOOLEAN (INTEGER)
[2m2025-07-24T05:27:30.146827Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: posts.content -> TEXT (TEXT)
[2m2025-07-24T05:27:30.147004Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: posts.category_id -> INTEGER (INTEGER)
[2m2025-07-24T05:27:30.147184Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: posts.created_at -> TIMESTAMP WITHOUT TIME ZONE (INTEGER)
[2m2025-07-24T05:27:30.147188Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored type mappings for table posts (simple query protocol)
[2m2025-07-24T05:27:30.147195Z[0m [32m INFO[0m [2mpgsqlite::catalog::constraint_populator[0m[2m:[0m Populating constraints for table: posts
[2m2025-07-24T05:27:30.176961Z[0m [32m INFO[0m [2mpgsqlite::catalog::constraint_populator[0m[2m:[0m Successfully populated constraints for table: posts
[2m2025-07-24T05:27:30.176993Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Successfully populated constraint catalog tables for table: posts
[2m2025-07-24T05:27:30.177690Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: 
CREATE TABLE orders (
	id SERIAL NOT NULL, 
	customer_id INTEGER NOT NULL, 
	order_date DATE, 
	order_time TIME WITHOUT TIME ZONE, 
	total_amount NUMERIC(12, 2), 
	status VARCHAR(20), 
	notes TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(customer_id) REFERENCES users (id)
)


[2m2025-07-24T05:27:30.177709Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: CREATE TABLE orders (
	id SERIAL NOT NULL, 
	customer_id INTEGER NOT NULL, 
	order_date DATE, 
	order_time TIME WITHOUT TIME ZONE, 
	total_amount NUMERIC(12, 2), 
	status VARCHAR(20), 
	notes TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(customer_id) REFERENCES users (id)
)
[2m2025-07-24T05:27:30.178153Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Create for query: CREATE TABLE orders (
	id SERIAL NOT NULL, 
	customer_id INTEGER NOT NULL, 
	order_date DATE, 
	order_time TIME WITHOUT TIME ZONE, 
	total_amount NUMERIC(12, 2), 
	status VARCHAR(20), 
	notes TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(customer_id) REFERENCES users (id)
)
[2m2025-07-24T05:27:30.186596Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type mappings count: 7
[2m2025-07-24T05:27:30.186650Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Successfully created/verified __pgsqlite_schema table
[2m2025-07-24T05:27:30.186865Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: orders.order_date -> DATE (INTEGER)
[2m2025-07-24T05:27:30.187099Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: orders.order_time -> TIME WITHOUT TIME ZONE (INTEGER)
[2m2025-07-24T05:27:30.187270Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: orders.customer_id -> INTEGER (INTEGER)
[2m2025-07-24T05:27:30.187420Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: orders.total_amount -> NUMERIC(12,2) (DECIMAL)
[2m2025-07-24T05:27:30.187625Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored numeric constraint: orders.total_amount precision=12 scale=2
[2m2025-07-24T05:27:30.187825Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: orders.id -> SERIAL (INTEGER PRIMARY KEY AUTOINCREMENT)
[2m2025-07-24T05:27:30.187995Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: orders.status -> VARCHAR(20) (TEXT)
[2m2025-07-24T05:27:30.188200Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored string constraint: orders.status max_length=20
[2m2025-07-24T05:27:30.188364Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: orders.notes -> TEXT (TEXT)
[2m2025-07-24T05:27:30.188368Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored type mappings for table orders (simple query protocol)
[2m2025-07-24T05:27:30.188375Z[0m [32m INFO[0m [2mpgsqlite::catalog::constraint_populator[0m[2m:[0m Populating constraints for table: orders
[2m2025-07-24T05:27:30.218122Z[0m [32m INFO[0m [2mpgsqlite::catalog::constraint_populator[0m[2m:[0m Successfully populated constraints for table: orders
[2m2025-07-24T05:27:30.218152Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Successfully populated constraint catalog tables for table: orders
[2m2025-07-24T05:27:30.218839Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: 
CREATE TABLE order_items (
	id SERIAL NOT NULL, 
	order_id INTEGER NOT NULL, 
	product_id INTEGER NOT NULL, 
	quantity INTEGER NOT NULL, 
	unit_price NUMERIC(10, 2) NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(order_id) REFERENCES orders (id), 
	FOREIGN KEY(product_id) REFERENCES products (id)
)


[2m2025-07-24T05:27:30.218862Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: CREATE TABLE order_items (
	id SERIAL NOT NULL, 
	order_id INTEGER NOT NULL, 
	product_id INTEGER NOT NULL, 
	quantity INTEGER NOT NULL, 
	unit_price NUMERIC(10, 2) NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(order_id) REFERENCES orders (id), 
	FOREIGN KEY(product_id) REFERENCES products (id)
)
[2m2025-07-24T05:27:30.219293Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Create for query: CREATE TABLE order_items (
	id SERIAL NOT NULL, 
	order_id INTEGER NOT NULL, 
	product_id INTEGER NOT NULL, 
	quantity INTEGER NOT NULL, 
	unit_price NUMERIC(10, 2) NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(order_id) REFERENCES orders (id), 
	FOREIGN KEY(product_id) REFERENCES products (id)
)
[2m2025-07-24T05:27:30.228605Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type mappings count: 5
[2m2025-07-24T05:27:30.228668Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Successfully created/verified __pgsqlite_schema table
[2m2025-07-24T05:27:30.228880Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: order_items.quantity -> INTEGER (INTEGER)
[2m2025-07-24T05:27:30.229035Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: order_items.unit_price -> NUMERIC(10,2) (DECIMAL)
[2m2025-07-24T05:27:30.229243Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored numeric constraint: order_items.unit_price precision=10 scale=2
[2m2025-07-24T05:27:30.229444Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: order_items.id -> SERIAL (INTEGER PRIMARY KEY AUTOINCREMENT)
[2m2025-07-24T05:27:30.229616Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: order_items.order_id -> INTEGER (INTEGER)
[2m2025-07-24T05:27:30.229793Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored metadata: order_items.product_id -> INTEGER (INTEGER)
[2m2025-07-24T05:27:30.229799Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Stored type mappings for table order_items (simple query protocol)
[2m2025-07-24T05:27:30.229806Z[0m [32m INFO[0m [2mpgsqlite::catalog::constraint_populator[0m[2m:[0m Populating constraints for table: order_items
[2m2025-07-24T05:27:30.260694Z[0m [32m INFO[0m [2mpgsqlite::catalog::constraint_populator[0m[2m:[0m Successfully populated constraints for table: order_items
[2m2025-07-24T05:27:30.260732Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Successfully populated constraint catalog tables for table: order_items
[2m2025-07-24T05:27:30.261151Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: COMMIT
[2m2025-07-24T05:27:30.261179Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: COMMIT
[2m2025-07-24T05:27:30.261287Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Commit for query: COMMIT
[2m2025-07-24T05:27:30.261895Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT 1
[2m2025-07-24T05:27:30.261911Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT 1
[2m2025-07-24T05:27:30.261986Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT 1
[2m2025-07-24T05:27:30.261992Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT 1
[2m2025-07-24T05:27:30.261998Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT 1
[2m2025-07-24T05:27:30.262014Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT 1
[2m2025-07-24T05:27:30.262044Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT 1': pattern=ComplexQuery, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:30.262085Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 1 rows
[2m2025-07-24T05:27:30.262091Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT 1
[2m2025-07-24T05:27:30.263330Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: None for query: SELECT 1
[2m2025-07-24T05:27:30.263378Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 1 rows
[2m2025-07-24T05:27:30.263387Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:30.263392Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.263401Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.263668Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: BEGIN
[2m2025-07-24T05:27:30.263689Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: BEGIN
[2m2025-07-24T05:27:30.263734Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Begin for query: BEGIN
[2m2025-07-24T05:27:30.263855Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: 
                    SELECT table_name 
                    FROM information_schema.tables 
                    WHERE table_schema = 'public' 
                    AND table_type = 'BASE TABLE'
                    ORDER BY table_name
                
[2m2025-07-24T05:27:30.263872Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT table_name 
                    FROM information_schema.tables 
                    WHERE table_schema = 'public' 
                    AND table_type = 'BASE TABLE'
                    ORDER BY table_name
[2m2025-07-24T05:27:30.264441Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT table_name 
                    FROM information_schema.tables 
                    WHERE table_schema = 'public' 
                    AND table_type = 'BASE TABLE'
                    ORDER BY table_name
[2m2025-07-24T05:27:30.264447Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT table_name 
                    FROM information_schema.tables 
                    WHERE table_schema = 'public' 
                    AND table_type = 'BASE TABLE'
                    ORDER BY table_name
[2m2025-07-24T05:27:30.264450Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT table_name 
                    FROM information_schema.tables 
                    WHERE table_schema = 'public' 
                    AND table_type = 'BASE TABLE'
                    ORDER BY table_name
[2m2025-07-24T05:27:30.264476Z[0m [32m INFO[0m [2mpgsqlite::catalog::query_interceptor[0m[2m:[0m Intercepting catalog query: SELECT table_name 
                    FROM information_schema.tables 
                    WHERE table_schema = 'public' 
                    AND table_type = 'BASE TABLE'
                    ORDER BY table_name
[2m2025-07-24T05:27:30.265089Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite_%' AND name NOT LIKE '__pgsqlite_%'
[2m2025-07-24T05:27:30.265227Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Read-only optimizer succeeded for query: SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite_%' AND name NOT LIKE '__pgsqlite_%'
[2m2025-07-24T05:27:30.265232Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite_%' AND name NOT LIKE '__pgsqlite_%'
[2m2025-07-24T05:27:30.266777Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("information_schema.tables") for query: SELECT table_name 
                    FROM information_schema.tables 
                    WHERE table_schema = 'public' 
                    AND table_type = 'BASE TABLE'
                    ORDER BY table_name
[2m2025-07-24T05:27:30.266798Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'information_schema.tables', looking up schema for 1 columns
[2m2025-07-24T05:27:30.273250Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: No schema type found for 'information_schema.tables.table_name'
[2m2025-07-24T05:27:30.281727Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 9 rows
[2m2025-07-24T05:27:30.281742Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:30.281747Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.281756Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.282112Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: ROLLBACK
[2m2025-07-24T05:27:30.282126Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: ROLLBACK
[2m2025-07-24T05:27:30.282178Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Rollback for query: ROLLBACK
[2m2025-07-24T05:27:30.289195Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT 1
[2m2025-07-24T05:27:30.289237Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT 1
[2m2025-07-24T05:27:30.289333Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT 1
[2m2025-07-24T05:27:30.289337Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT 1
[2m2025-07-24T05:27:30.289342Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT 1
[2m2025-07-24T05:27:30.289361Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT 1
[2m2025-07-24T05:27:30.289400Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT 1': pattern=ComplexQuery, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:30.289474Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 1 rows
[2m2025-07-24T05:27:30.289490Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT 1
[2m2025-07-24T05:27:30.291622Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: None for query: SELECT 1
[2m2025-07-24T05:27:30.291698Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 1 rows
[2m2025-07-24T05:27:30.291708Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:30.291722Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.291735Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.293628Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: BEGIN
[2m2025-07-24T05:27:30.293646Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: BEGIN
[2m2025-07-24T05:27:30.293696Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Begin for query: BEGIN
[2m2025-07-24T05:27:30.293821Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: INSERT INTO categories (name, description, created_at) SELECT p0::VARCHAR, p1::TEXT, p2::TIMESTAMP WITHOUT TIME ZONE FROM (VALUES ('Technology', 'Posts about technology and programming', '2025-07-24T05:27:30.293466'::timestamp, 0), ('Lifestyle', 'Posts about lifestyle and personal development', '2025-07-24T05:27:30.293470'::timestamp, 1)) AS imp_sen(p0, p1, p2, sen_counter) ORDER BY sen_counter RETURNING categories.id, categories.id AS id__1
[2m2025-07-24T05:27:30.293842Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: INSERT INTO categories (name, description, created_at) SELECT p0::VARCHAR, p1::TEXT, p2::TIMESTAMP WITHOUT TIME ZONE FROM (VALUES ('Technology', 'Posts about technology and programming', '2025-07-24T05:27:30.293466'::timestamp, 0), ('Lifestyle', 'Posts about lifestyle and personal development', '2025-07-24T05:27:30.293470'::timestamp, 1)) AS imp_sen(p0, p1, p2, sen_counter) ORDER BY sen_counter RETURNING categories.id, categories.id AS id__1
🔧 INSERT SELECT translation called for table: categories
   SELECT clause: CAST(p0 AS TEXT), CAST(p1 AS TEXT), p2 FROM (VALUES ('Technology', 'Posts about technology and programming', '2025-07-24T05:27:30.293466', 0), ('Lifestyle', 'Posts about lifestyle and personal development', '2025-07-24T05:27:30.293470', 1)) AS imp_sen(p0, p1, p2, sen_counter) ORDER BY sen_counter RETURNING categories.id, categories.id AS id__1
[2m2025-07-24T05:27:30.309564Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT column_name, pg_type FROM __pgsqlite_schema WHERE table_name = 'categories'
[2m2025-07-24T05:27:30.309710Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Read-only optimizer succeeded for query: SELECT column_name, pg_type FROM __pgsqlite_schema WHERE table_name = 'categories'
[2m2025-07-24T05:27:30.309723Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT column_name, pg_type FROM __pgsqlite_schema WHERE table_name = 'categories'
🎯 SQLAlchemy VALUES pattern detected in: CAST(p0 AS TEXT), CAST(p1 AS TEXT), p2 FROM (VALUES ('Technology', 'Posts about technology and programming', '2025-07-24T05:27:30.293466', 0), ('Lifestyle', 'Posts about lifestyle and personal development', '2025-07-24T05:27:30.293470', 1)) AS imp_sen(p0, p1, p2, sen_counter) ORDER BY sen_counter RETURNING categories.id, categories.id AS id__1
   🔄 Replaced p0 with column1 in: CAST(p0 AS TEXT) → CAST(column1 AS TEXT)
   🔄 Replaced p1 with column2 in: CAST(p1 AS TEXT) → CAST(column2 AS TEXT)
   🔄 Replaced p2 with column3 in: p2 → column3
   Converted SELECT: CAST(column1 AS TEXT), CAST(column2 AS TEXT), column3
🎯 SQLAlchemy VALUES pattern detected in: CAST(p0 AS TEXT), CAST(p1 AS TEXT), p2 FROM (VALUES ('Technology', 'Posts about technology and programming', '2025-07-24T05:27:30.293466', 0), ('Lifestyle', 'Posts about lifestyle and personal development', '2025-07-24T05:27:30.293470', 1)) AS imp_sen(p0, p1, p2, sen_counter) ORDER BY sen_counter RETURNING categories.id, categories.id AS id__1
   🧹 Cleaned FROM clause:  FROM (VALUES ('Technology', 'Posts about technology and programming', '2025-07-24T05:27:30.293466', 0), ('Lifestyle', 'Posts about lifestyle and personal development', '2025-07-24T05:27:30.293470', 1)) AS imp_sen(p0, p1, p2, sen_counter) ORDER BY sen_counter RETURNING categories.id, categories.id AS id__1 →  FROM (VALUES ('Technology', 'Posts about technology and programming', '2025-07-24T05:27:30.293466', 0), ('Lifestyle', 'Posts about lifestyle and personal development', '2025-07-24T05:27:30.293470', 1)) ORDER BY sen_counter RETURNING categories.id, categories.id AS id__1
   Final SELECT: CAST(column1 AS TEXT), CAST(column2 AS TEXT), column3 FROM (VALUES ('Technology', 'Posts about technology and programming', '2025-07-24T05:27:30.293466', 0), ('Lifestyle', 'Posts about lifestyle and personal development', '2025-07-24T05:27:30.293470', 1)) ORDER BY sen_counter RETURNING categories.id, categories.id AS id__1
[2m2025-07-24T05:27:30.310455Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Insert for query: INSERT INTO categories (name, description, created_at) SELECT CAST(column1 AS TEXT), CAST(column2 AS TEXT), column3 FROM (VALUES ('Technology', 'Posts about technology and programming', '2025-07-24T05:27:30.293466', 0), ('Lifestyle', 'Posts about lifestyle and personal development', '2025-07-24T05:27:30.293470', 1)) ORDER BY sen_counter RETURNING categories.id, categories.id AS id__1
[2m2025-07-24T05:27:30.313886Z[0m [32m INFO[0m [2mpgsqlite::cache::enhanced_statement_pool[0m[2m:[0m Enhanced statement pool preparing query: INSERT INTO categories (name, description, created_at) SELECT CAST(column1 AS TEXT), CAST(column2 AS TEXT), column3 FROM (VALUES ('Technology', 'Posts about technology and programming', '2025-07-24T05:27:30.293466', 0), ('Lifestyle', 'Posts about lifestyle and personal development', '2025-07-24T05:27:30.293470', 1)) ORDER BY sen_counter
[2m2025-07-24T05:27:30.316044Z[0m [31mERROR[0m [2mpgsqlite[0m[2m:[0m Query execution error: SQLite error: no such column: sen_counter in INSERT INTO categories (name, description, created_at) SELECT CAST(column1 AS TEXT), CAST(column2 AS TEXT), column3 FROM (VALUES ('Technology', 'Posts about technology and programming', '2025-07-24T05:27:30.293466', 0), ('Lifestyle', 'Posts about lifestyle and personal development', '2025-07-24T05:27:30.293470', 1)) ORDER BY sen_counter at offset 327
[2m2025-07-24T05:27:30.316548Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: ROLLBACK
[2m2025-07-24T05:27:30.316561Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: ROLLBACK
[2m2025-07-24T05:27:30.316609Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Rollback for query: ROLLBACK
[2m2025-07-24T05:27:30.321348Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT 1
[2m2025-07-24T05:27:30.321394Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT 1
[2m2025-07-24T05:27:30.321503Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT 1
[2m2025-07-24T05:27:30.321508Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT 1
[2m2025-07-24T05:27:30.321514Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT 1
[2m2025-07-24T05:27:30.321534Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT 1
[2m2025-07-24T05:27:30.321574Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT 1': pattern=ComplexQuery, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:30.321656Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 1 rows
[2m2025-07-24T05:27:30.321660Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT 1
[2m2025-07-24T05:27:30.323217Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: None for query: SELECT 1
[2m2025-07-24T05:27:30.323283Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 1 rows
[2m2025-07-24T05:27:30.323291Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:30.323296Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.323306Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.326984Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: BEGIN
[2m2025-07-24T05:27:30.327012Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: BEGIN
[2m2025-07-24T05:27:30.327085Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Begin for query: BEGIN
[2m2025-07-24T05:27:30.327229Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT count(*) AS count_1 
FROM (SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users) AS anon_1
[2m2025-07-24T05:27:30.327242Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT count(*) AS count_1 
FROM (SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users) AS anon_1
[2m2025-07-24T05:27:30.344370Z[0m [32m INFO[0m [2mpgsqlite::translator::arithmetic_analyzer[0m[2m:[0m Detected arithmetic on columns ["count"] aliased as 'count_1', using 'count' as source
[2m2025-07-24T05:27:30.345556Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT count(*) AS count_1 
FROM (SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users) AS anon_1
[2m2025-07-24T05:27:30.345568Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT count(*) AS count_1 
FROM (SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users) AS anon_1
[2m2025-07-24T05:27:30.345573Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT count(*) AS count_1 
FROM (SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users) AS anon_1
[2m2025-07-24T05:27:30.345612Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT count(*) AS count_1 
FROM (SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users) AS anon_1
[2m2025-07-24T05:27:30.345943Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT count(*) AS count_1 
FROM (SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users) AS anon_1': pattern=ComplexQuery, cache_result=false, supports_binary=false
[2m2025-07-24T05:27:30.346053Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 1 rows
[2m2025-07-24T05:27:30.346058Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT count(*) AS count_1 
FROM (SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users) AS anon_1
[2m2025-07-24T05:27:30.347456Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("users") for query: SELECT count(*) AS count_1 
FROM (SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users) AS anon_1
[2m2025-07-24T05:27:30.347480Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'users', looking up schema for 1 columns
[2m2025-07-24T05:27:30.360460Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: No schema type found for 'users.count_1'
[2m2025-07-24T05:27:30.367575Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 1 rows
[2m2025-07-24T05:27:30.367596Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [20]
[2m2025-07-24T05:27:30.367603Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.367614Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.369813Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT count(*) AS count_1 
FROM (SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts) AS anon_1
[2m2025-07-24T05:27:30.369848Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT count(*) AS count_1 
FROM (SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts) AS anon_1
[2m2025-07-24T05:27:30.370457Z[0m [32m INFO[0m [2mpgsqlite::translator::arithmetic_analyzer[0m[2m:[0m Detected arithmetic on columns ["count"] aliased as 'count_1', using 'count' as source
[2m2025-07-24T05:27:30.371705Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT count(*) AS count_1 
FROM (SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts) AS anon_1
[2m2025-07-24T05:27:30.371734Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT count(*) AS count_1 
FROM (SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts) AS anon_1
[2m2025-07-24T05:27:30.371739Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT count(*) AS count_1 
FROM (SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts) AS anon_1
[2m2025-07-24T05:27:30.371780Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT count(*) AS count_1 
FROM (SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts) AS anon_1
[2m2025-07-24T05:27:30.372044Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT count(*) AS count_1 
FROM (SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts) AS anon_1': pattern=ComplexQuery, cache_result=false, supports_binary=false
[2m2025-07-24T05:27:30.372131Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 1 rows
[2m2025-07-24T05:27:30.372135Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT count(*) AS count_1 
FROM (SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts) AS anon_1
[2m2025-07-24T05:27:30.373551Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("posts") for query: SELECT count(*) AS count_1 
FROM (SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts) AS anon_1
[2m2025-07-24T05:27:30.373572Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'posts', looking up schema for 1 columns
[2m2025-07-24T05:27:30.386023Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: No schema type found for 'posts.count_1'
[2m2025-07-24T05:27:30.392021Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 1 rows
[2m2025-07-24T05:27:30.392050Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [20]
[2m2025-07-24T05:27:30.392056Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.392067Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.393765Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT count(*) AS count_1 
FROM (SELECT products.id AS products_id, products.name AS products_name, products.description AS products_description, products.price AS products_price, products.stock_quantity AS products_stock_quantity, products.is_available AS products_is_available, products.created_at AS products_created_at 
FROM products) AS anon_1
[2m2025-07-24T05:27:30.393799Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT count(*) AS count_1 
FROM (SELECT products.id AS products_id, products.name AS products_name, products.description AS products_description, products.price AS products_price, products.stock_quantity AS products_stock_quantity, products.is_available AS products_is_available, products.created_at AS products_created_at 
FROM products) AS anon_1
[2m2025-07-24T05:27:30.394333Z[0m [32m INFO[0m [2mpgsqlite::translator::arithmetic_analyzer[0m[2m:[0m Detected arithmetic on columns ["count"] aliased as 'count_1', using 'count' as source
[2m2025-07-24T05:27:30.395569Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT count(*) AS count_1 
FROM (SELECT products.id AS products_id, products.name AS products_name, products.description AS products_description, products.price AS products_price, products.stock_quantity AS products_stock_quantity, products.is_available AS products_is_available, products.created_at AS products_created_at 
FROM products) AS anon_1
[2m2025-07-24T05:27:30.395581Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT count(*) AS count_1 
FROM (SELECT products.id AS products_id, products.name AS products_name, products.description AS products_description, products.price AS products_price, products.stock_quantity AS products_stock_quantity, products.is_available AS products_is_available, products.created_at AS products_created_at 
FROM products) AS anon_1
[2m2025-07-24T05:27:30.395585Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT count(*) AS count_1 
FROM (SELECT products.id AS products_id, products.name AS products_name, products.description AS products_description, products.price AS products_price, products.stock_quantity AS products_stock_quantity, products.is_available AS products_is_available, products.created_at AS products_created_at 
FROM products) AS anon_1
[2m2025-07-24T05:27:30.395625Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT count(*) AS count_1 
FROM (SELECT products.id AS products_id, products.name AS products_name, products.description AS products_description, products.price AS products_price, products.stock_quantity AS products_stock_quantity, products.is_available AS products_is_available, products.created_at AS products_created_at 
FROM products) AS anon_1
[2m2025-07-24T05:27:30.395885Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT count(*) AS count_1 
FROM (SELECT products.id AS products_id, products.name AS products_name, products.description AS products_description, products.price AS products_price, products.stock_quantity AS products_stock_quantity, products.is_available AS products_is_available, products.created_at AS products_created_at 
FROM products) AS anon_1': pattern=ComplexQuery, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:30.395967Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 1 rows
[2m2025-07-24T05:27:30.395972Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT count(*) AS count_1 
FROM (SELECT products.id AS products_id, products.name AS products_name, products.description AS products_description, products.price AS products_price, products.stock_quantity AS products_stock_quantity, products.is_available AS products_is_available, products.created_at AS products_created_at 
FROM products) AS anon_1
[2m2025-07-24T05:27:30.397411Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("products") for query: SELECT count(*) AS count_1 
FROM (SELECT products.id AS products_id, products.name AS products_name, products.description AS products_description, products.price AS products_price, products.stock_quantity AS products_stock_quantity, products.is_available AS products_is_available, products.created_at AS products_created_at 
FROM products) AS anon_1
[2m2025-07-24T05:27:30.397430Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'products', looking up schema for 1 columns
[2m2025-07-24T05:27:30.412369Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: No schema type found for 'products.count_1'
[2m2025-07-24T05:27:30.418103Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 1 rows
[2m2025-07-24T05:27:30.418123Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [20]
[2m2025-07-24T05:27:30.418133Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.418143Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.419322Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.is_active = true
[2m2025-07-24T05:27:30.419347Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.is_active = true
[2m2025-07-24T05:27:30.420034Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.is_active = true
[2m2025-07-24T05:27:30.420043Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.is_active = true
[2m2025-07-24T05:27:30.420047Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.is_active = true
[2m2025-07-24T05:27:30.420080Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.is_active = true
[2m2025-07-24T05:27:30.420448Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.is_active = true': pattern=ComplexQuery, cache_result=false, supports_binary=false
[2m2025-07-24T05:27:30.420533Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 7 columns and 0 rows
[2m2025-07-24T05:27:30.420538Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.is_active = true
[2m2025-07-24T05:27:30.422093Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("users") for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.is_active = true
[2m2025-07-24T05:27:30.422114Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'users', looking up schema for 7 columns
[2m2025-07-24T05:27:30.434471Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.id' (via SELECT mapping users_id) -> SERIAL
[2m2025-07-24T05:27:30.434502Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.username' (via SELECT mapping users_username) -> VARCHAR(50)
[2m2025-07-24T05:27:30.434522Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.email' (via SELECT mapping users_email) -> VARCHAR(100)
[2m2025-07-24T05:27:30.434540Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.full_name' (via SELECT mapping users_full_name) -> VARCHAR(100)
[2m2025-07-24T05:27:30.434559Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.is_active' (via SELECT mapping users_is_active) -> BOOLEAN
[2m2025-07-24T05:27:30.434577Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.created_at' (via SELECT mapping users_created_at) -> TIMESTAMP WITHOUT TIME ZONE
[2m2025-07-24T05:27:30.434595Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.birth_date' (via SELECT mapping users_birth_date) -> DATE
[2m2025-07-24T05:27:30.434674Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 0 rows
[2m2025-07-24T05:27:30.434683Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [23, 1043, 1043, 1043, 16, 1114, 1082]
[2m2025-07-24T05:27:30.434689Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.434696Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.436029Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1
[2m2025-07-24T05:27:30.436053Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1
[2m2025-07-24T05:27:30.436617Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1
[2m2025-07-24T05:27:30.436624Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1
[2m2025-07-24T05:27:30.436628Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1
[2m2025-07-24T05:27:30.436659Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1
[2m2025-07-24T05:27:30.437038Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1': pattern=ComplexQuery, cache_result=false, supports_binary=false
[2m2025-07-24T05:27:30.437101Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 7 columns and 0 rows
[2m2025-07-24T05:27:30.437105Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1
[2m2025-07-24T05:27:30.438568Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("users") for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1
[2m2025-07-24T05:27:30.438589Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'users', looking up schema for 7 columns
[2m2025-07-24T05:27:30.450882Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.id' (via SELECT mapping users_id) -> SERIAL
[2m2025-07-24T05:27:30.450911Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.username' (via SELECT mapping users_username) -> VARCHAR(50)
[2m2025-07-24T05:27:30.450930Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.email' (via SELECT mapping users_email) -> VARCHAR(100)
[2m2025-07-24T05:27:30.450949Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.full_name' (via SELECT mapping users_full_name) -> VARCHAR(100)
[2m2025-07-24T05:27:30.450973Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.is_active' (via SELECT mapping users_is_active) -> BOOLEAN
[2m2025-07-24T05:27:30.450992Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.created_at' (via SELECT mapping users_created_at) -> TIMESTAMP WITHOUT TIME ZONE
[2m2025-07-24T05:27:30.451009Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.birth_date' (via SELECT mapping users_birth_date) -> DATE
[2m2025-07-24T05:27:30.451065Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 0 rows
[2m2025-07-24T05:27:30.451073Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [23, 1043, 1043, 1043, 16, 1114, 1082]
[2m2025-07-24T05:27:30.451079Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.451085Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.452370Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts JOIN categories ON categories.id = posts.category_id 
WHERE categories.name = 'Technology' OR posts.view_count > 200
[2m2025-07-24T05:27:30.452396Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts JOIN categories ON categories.id = posts.category_id 
WHERE categories.name = 'Technology' OR posts.view_count > 200
[2m2025-07-24T05:27:30.453122Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts JOIN categories ON categories.id = posts.category_id 
WHERE categories.name = 'Technology' OR posts.view_count > 200
[2m2025-07-24T05:27:30.453145Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts JOIN categories ON categories.id = posts.category_id 
WHERE categories.name = 'Technology' OR posts.view_count > 200
[2m2025-07-24T05:27:30.453150Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts JOIN categories ON categories.id = posts.category_id 
WHERE categories.name = 'Technology' OR posts.view_count > 200
[2m2025-07-24T05:27:30.453198Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts JOIN categories ON categories.id = posts.category_id 
WHERE categories.name = 'Technology' OR posts.view_count > 200
[2m2025-07-24T05:27:30.453394Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts JOIN categories ON categories.id = posts.category_id 
WHERE categories.name = 'Technology' OR posts.view_count > 200': pattern=JoinWithWhere, cache_result=false, supports_binary=false
[2m2025-07-24T05:27:30.453499Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 9 columns and 0 rows
[2m2025-07-24T05:27:30.453503Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts JOIN categories ON categories.id = posts.category_id 
WHERE categories.name = 'Technology' OR posts.view_count > 200
[2m2025-07-24T05:27:30.455012Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("posts") for query: SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published 
FROM posts JOIN categories ON categories.id = posts.category_id 
WHERE categories.name = 'Technology' OR posts.view_count > 200
[2m2025-07-24T05:27:30.455035Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'posts', looking up schema for 9 columns
[2m2025-07-24T05:27:30.466766Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.id' (via SELECT mapping posts_id) -> SERIAL
[2m2025-07-24T05:27:30.466802Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.title' (via SELECT mapping posts_title) -> VARCHAR(200)
[2m2025-07-24T05:27:30.466821Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.content' (via SELECT mapping posts_content) -> TEXT
[2m2025-07-24T05:27:30.466840Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.author_id' (via SELECT mapping posts_author_id) -> INTEGER
[2m2025-07-24T05:27:30.466859Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.category_id' (via SELECT mapping posts_category_id) -> INTEGER
[2m2025-07-24T05:27:30.466877Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.created_at' (via SELECT mapping posts_created_at) -> TIMESTAMP WITHOUT TIME ZONE
[2m2025-07-24T05:27:30.466896Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.updated_at' (via SELECT mapping posts_updated_at) -> TIMESTAMP WITHOUT TIME ZONE
[2m2025-07-24T05:27:30.466922Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.view_count' (via SELECT mapping posts_view_count) -> INTEGER
[2m2025-07-24T05:27:30.466943Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.is_published' (via SELECT mapping posts_is_published) -> BOOLEAN
[2m2025-07-24T05:27:30.467056Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 0 rows
[2m2025-07-24T05:27:30.467067Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [23, 1043, 25, 23, 23, 1114, 1114, 23, 16]
[2m2025-07-24T05:27:30.467074Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.467081Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.468047Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username LIKE '%dev%'
[2m2025-07-24T05:27:30.468068Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username LIKE '%dev%'
[2m2025-07-24T05:27:30.468587Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username LIKE '%dev%'
[2m2025-07-24T05:27:30.468593Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username LIKE '%dev%'
[2m2025-07-24T05:27:30.468597Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username LIKE '%dev%'
[2m2025-07-24T05:27:30.468632Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username LIKE '%dev%'
[2m2025-07-24T05:27:30.468999Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username LIKE '%dev%'': pattern=ComplexQuery, cache_result=false, supports_binary=false
[2m2025-07-24T05:27:30.469055Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 7 columns and 0 rows
[2m2025-07-24T05:27:30.469064Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username LIKE '%dev%'
[2m2025-07-24T05:27:30.470523Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("users") for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username LIKE '%dev%'
[2m2025-07-24T05:27:30.470542Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'users', looking up schema for 7 columns
[2m2025-07-24T05:27:30.482855Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.id' (via SELECT mapping users_id) -> SERIAL
[2m2025-07-24T05:27:30.482883Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.username' (via SELECT mapping users_username) -> VARCHAR(50)
[2m2025-07-24T05:27:30.482902Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.email' (via SELECT mapping users_email) -> VARCHAR(100)
[2m2025-07-24T05:27:30.482920Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.full_name' (via SELECT mapping users_full_name) -> VARCHAR(100)
[2m2025-07-24T05:27:30.482938Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.is_active' (via SELECT mapping users_is_active) -> BOOLEAN
[2m2025-07-24T05:27:30.482956Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.created_at' (via SELECT mapping users_created_at) -> TIMESTAMP WITHOUT TIME ZONE
[2m2025-07-24T05:27:30.482974Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.birth_date' (via SELECT mapping users_birth_date) -> DATE
[2m2025-07-24T05:27:30.483026Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 0 rows
[2m2025-07-24T05:27:30.483034Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [23, 1043, 1043, 1043, 16, 1114, 1082]
[2m2025-07-24T05:27:30.483039Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.483045Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.483318Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: ROLLBACK
[2m2025-07-24T05:27:30.483329Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: ROLLBACK
[2m2025-07-24T05:27:30.483374Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Rollback for query: ROLLBACK
[2m2025-07-24T05:27:30.483785Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT 1
[2m2025-07-24T05:27:30.483798Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT 1
[2m2025-07-24T05:27:30.483829Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT 1
[2m2025-07-24T05:27:30.483832Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT 1
[2m2025-07-24T05:27:30.483836Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT 1
[2m2025-07-24T05:27:30.483848Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT 1
[2m2025-07-24T05:27:30.483864Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT 1': pattern=ComplexQuery, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:30.483887Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 1 columns and 1 rows
[2m2025-07-24T05:27:30.483891Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT 1
[2m2025-07-24T05:27:30.485066Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: None for query: SELECT 1
[2m2025-07-24T05:27:30.485103Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 1 rows
[2m2025-07-24T05:27:30.485110Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [25]
[2m2025-07-24T05:27:30.485114Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.485123Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.485380Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: BEGIN
[2m2025-07-24T05:27:30.485390Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: BEGIN
[2m2025-07-24T05:27:30.485433Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Begin for query: BEGIN
[2m2025-07-24T05:27:30.485511Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1
[2m2025-07-24T05:27:30.485524Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1
[2m2025-07-24T05:27:30.486027Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1
[2m2025-07-24T05:27:30.486035Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1
[2m2025-07-24T05:27:30.486038Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1
[2m2025-07-24T05:27:30.486064Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1
[2m2025-07-24T05:27:30.486134Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1': pattern=ComplexQuery, cache_result=false, supports_binary=false
[2m2025-07-24T05:27:30.486201Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 7 columns and 0 rows
[2m2025-07-24T05:27:30.486205Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1
[2m2025-07-24T05:27:30.487675Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("users") for query: SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date 
FROM users 
WHERE users.username = 'alice_dev' 
 LIMIT 1
[2m2025-07-24T05:27:30.487727Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 0 rows
[2m2025-07-24T05:27:30.487736Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [23, 1043, 1043, 1043, 16, 1114, 1082]
[2m2025-07-24T05:27:30.487742Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.487747Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.489131Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published, users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date, categories.id AS categories_id, categories.name AS categories_name, categories.description AS categories_description, categories.created_at AS categories_created_at 
FROM posts JOIN users ON posts.author_id = users.id JOIN categories ON posts.category_id = categories.id
[2m2025-07-24T05:27:30.489160Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published, users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date, categories.id AS categories_id, categories.name AS categories_name, categories.description AS categories_description, categories.created_at AS categories_created_at 
FROM posts JOIN users ON posts.author_id = users.id JOIN categories ON posts.category_id = categories.id
[2m2025-07-24T05:27:30.490253Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published, users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date, categories.id AS categories_id, categories.name AS categories_name, categories.description AS categories_description, categories.created_at AS categories_created_at 
FROM posts JOIN users ON posts.author_id = users.id JOIN categories ON posts.category_id = categories.id
[2m2025-07-24T05:27:30.490267Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published, users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date, categories.id AS categories_id, categories.name AS categories_name, categories.description AS categories_description, categories.created_at AS categories_created_at 
FROM posts JOIN users ON posts.author_id = users.id JOIN categories ON posts.category_id = categories.id
[2m2025-07-24T05:27:30.490271Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published, users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date, categories.id AS categories_id, categories.name AS categories_name, categories.description AS categories_description, categories.created_at AS categories_created_at 
FROM posts JOIN users ON posts.author_id = users.id JOIN categories ON posts.category_id = categories.id
[2m2025-07-24T05:27:30.490333Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published, users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date, categories.id AS categories_id, categories.name AS categories_name, categories.description AS categories_description, categories.created_at AS categories_created_at 
FROM posts JOIN users ON posts.author_id = users.id JOIN categories ON posts.category_id = categories.id
[2m2025-07-24T05:27:30.490582Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published, users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date, categories.id AS categories_id, categories.name AS categories_name, categories.description AS categories_description, categories.created_at AS categories_created_at 
FROM posts JOIN users ON posts.author_id = users.id JOIN categories ON posts.category_id = categories.id': pattern=JoinWithWhere, cache_result=false, supports_binary=false
[2m2025-07-24T05:27:30.490670Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 20 columns and 0 rows
[2m2025-07-24T05:27:30.490674Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published, users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date, categories.id AS categories_id, categories.name AS categories_name, categories.description AS categories_description, categories.created_at AS categories_created_at 
FROM posts JOIN users ON posts.author_id = users.id JOIN categories ON posts.category_id = categories.id
[2m2025-07-24T05:27:30.492085Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("posts") for query: SELECT posts.id AS posts_id, posts.title AS posts_title, posts.content AS posts_content, posts.author_id AS posts_author_id, posts.category_id AS posts_category_id, posts.created_at AS posts_created_at, posts.updated_at AS posts_updated_at, posts.view_count AS posts_view_count, posts.is_published AS posts_is_published, users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.birth_date AS users_birth_date, categories.id AS categories_id, categories.name AS categories_name, categories.description AS categories_description, categories.created_at AS categories_created_at 
FROM posts JOIN users ON posts.author_id = users.id JOIN categories ON posts.category_id = categories.id
[2m2025-07-24T05:27:30.492107Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'posts', looking up schema for 20 columns
[2m2025-07-24T05:27:30.504170Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.id' (via SELECT mapping posts_id) -> SERIAL
[2m2025-07-24T05:27:30.504201Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.title' (via SELECT mapping posts_title) -> VARCHAR(200)
[2m2025-07-24T05:27:30.504220Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.content' (via SELECT mapping posts_content) -> TEXT
[2m2025-07-24T05:27:30.504238Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.author_id' (via SELECT mapping posts_author_id) -> INTEGER
[2m2025-07-24T05:27:30.504257Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.category_id' (via SELECT mapping posts_category_id) -> INTEGER
[2m2025-07-24T05:27:30.504275Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.created_at' (via SELECT mapping posts_created_at) -> TIMESTAMP WITHOUT TIME ZONE
[2m2025-07-24T05:27:30.504299Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.updated_at' (via SELECT mapping posts_updated_at) -> TIMESTAMP WITHOUT TIME ZONE
[2m2025-07-24T05:27:30.504317Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.view_count' (via SELECT mapping posts_view_count) -> INTEGER
[2m2025-07-24T05:27:30.504337Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.is_published' (via SELECT mapping posts_is_published) -> BOOLEAN
[2m2025-07-24T05:27:30.504355Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.id' (via SELECT mapping users_id) -> SERIAL
[2m2025-07-24T05:27:30.504427Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.created_at' (via SELECT mapping users_created_at) -> TIMESTAMP WITHOUT TIME ZONE
[2m2025-07-24T05:27:30.504459Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.id' (via SELECT mapping categories_id) -> SERIAL
[2m2025-07-24T05:27:30.504503Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'posts.created_at' (via SELECT mapping categories_created_at) -> TIMESTAMP WITHOUT TIME ZONE
[2m2025-07-24T05:27:30.565809Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 0 rows
[2m2025-07-24T05:27:30.565854Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [23, 1043, 25, 23, 23, 1114, 1114, 23, 16, 23, 25, 25, 25, 25, 1114, 25, 23, 25, 25, 1114]
[2m2025-07-24T05:27:30.565861Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.565867Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.569218Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT users.username AS users_username, count(posts.id) AS post_count, avg(posts.view_count) AS avg_views 
FROM users JOIN posts ON users.id = posts.author_id GROUP BY users.username
[2m2025-07-24T05:27:30.569273Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT users.username AS users_username, count(posts.id) AS post_count, avg(posts.view_count) AS avg_views 
FROM users JOIN posts ON users.id = posts.author_id GROUP BY users.username
[2m2025-07-24T05:27:30.569742Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT users.username AS users_username, count(posts.id) AS post_count, avg(posts.view_count) AS avg_views 
FROM users JOIN posts ON users.id = posts.author_id GROUP BY users.username
[2m2025-07-24T05:27:30.569757Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT users.username AS users_username, count(posts.id) AS post_count, avg(posts.view_count) AS avg_views 
FROM users JOIN posts ON users.id = posts.author_id GROUP BY users.username
[2m2025-07-24T05:27:30.569765Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT users.username AS users_username, count(posts.id) AS post_count, avg(posts.view_count) AS avg_views 
FROM users JOIN posts ON users.id = posts.author_id GROUP BY users.username
[2m2025-07-24T05:27:30.569801Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT users.username AS users_username, count(posts.id) AS post_count, avg(posts.view_count) AS avg_views 
FROM users JOIN posts ON users.id = posts.author_id GROUP BY users.username
[2m2025-07-24T05:27:30.569958Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT users.username AS users_username, count(posts.id) AS post_count, avg(posts.view_count) AS avg_views 
FROM users JOIN posts ON users.id = posts.author_id GROUP BY users.username': pattern=JoinWithWhere, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:30.570145Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 3 columns and 0 rows
[2m2025-07-24T05:27:30.570151Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT users.username AS users_username, count(posts.id) AS post_count, avg(posts.view_count) AS avg_views 
FROM users JOIN posts ON users.id = posts.author_id GROUP BY users.username
[2m2025-07-24T05:27:30.571787Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("users") for query: SELECT users.username AS users_username, count(posts.id) AS post_count, avg(posts.view_count) AS avg_views 
FROM users JOIN posts ON users.id = posts.author_id GROUP BY users.username
[2m2025-07-24T05:27:30.571812Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'users', looking up schema for 3 columns
[2m2025-07-24T05:27:30.580899Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'users.username' (via SELECT mapping users_username) -> VARCHAR(50)
[2m2025-07-24T05:27:30.580923Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: No schema type found for 'users.post_count'
[2m2025-07-24T05:27:30.580935Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: No schema type found for 'users.avg_views'
[2m2025-07-24T05:27:30.591973Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 0 rows
[2m2025-07-24T05:27:30.591997Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [1043, 20, 1700]
[2m2025-07-24T05:27:30.592004Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.592009Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.593562Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: SELECT orders.id AS orders_id, users.username AS users_username, products.name AS products_name, order_items.quantity AS order_items_quantity, order_items.unit_price AS order_items_unit_price, order_items.quantity * order_items.unit_price AS item_total 
FROM orders JOIN users ON orders.customer_id = users.id JOIN order_items ON orders.id = order_items.order_id JOIN products ON order_items.product_id = products.id
[2m2025-07-24T05:27:30.593587Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: SELECT orders.id AS orders_id, users.username AS users_username, products.name AS products_name, order_items.quantity AS order_items_quantity, order_items.unit_price AS order_items_unit_price, order_items.quantity * order_items.unit_price AS item_total 
FROM orders JOIN users ON orders.customer_id = users.id JOIN order_items ON orders.id = order_items.order_id JOIN products ON order_items.product_id = products.id
[2m2025-07-24T05:27:30.600391Z[0m [32m INFO[0m [2mpgsqlite::translator::arithmetic_analyzer[0m[2m:[0m Detected arithmetic on columns ["order_items.quantity", "order_items.unit_price"] aliased as 'item_total', using 'order_items.quantity' as source
[2m2025-07-24T05:27:30.601621Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Select for query: SELECT orders.id AS orders_id, users.username AS users_username, products.name AS products_name, order_items.quantity AS order_items_quantity, order_items.unit_price AS order_items_unit_price, order_items.quantity * order_items.unit_price AS item_total 
FROM orders JOIN users ON orders.customer_id = users.id JOIN order_items ON orders.id = order_items.order_id JOIN products ON order_items.product_id = products.id
[2m2025-07-24T05:27:30.601633Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Calling execute_select for query: SELECT orders.id AS orders_id, users.username AS users_username, products.name AS products_name, order_items.quantity AS order_items_quantity, order_items.unit_price AS order_items_unit_price, order_items.quantity * order_items.unit_price AS item_total 
FROM orders JOIN users ON orders.customer_id = users.id JOIN order_items ON orders.id = order_items.order_id JOIN products ON order_items.product_id = products.id
[2m2025-07-24T05:27:30.601648Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m === EXECUTE_SELECT CALLED with query: SELECT orders.id AS orders_id, users.username AS users_username, products.name AS products_name, order_items.quantity AS order_items_quantity, order_items.unit_price AS order_items_unit_price, order_items.quantity * order_items.unit_price AS item_total 
FROM orders JOIN users ON orders.customer_id = users.id JOIN order_items ON orders.id = order_items.order_id JOIN products ON order_items.product_id = products.id
[2m2025-07-24T05:27:30.601689Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Trying enhanced cache for query: SELECT orders.id AS orders_id, users.username AS users_username, products.name AS products_name, order_items.quantity AS order_items_quantity, order_items.unit_price AS order_items_unit_price, order_items.quantity * order_items.unit_price AS item_total 
FROM orders JOIN users ON orders.customer_id = users.id JOIN order_items ON orders.id = order_items.order_id JOIN products ON order_items.product_id = products.id
[2m2025-07-24T05:27:30.601880Z[0m [32m INFO[0m [2mpgsqlite::optimization::statement_cache_optimizer[0m[2m:[0m Query analysis result for 'SELECT orders.id AS orders_id, users.username AS users_username, products.name AS products_name, order_items.quantity AS order_items_quantity, order_items.unit_price AS order_items_unit_price, order_items.quantity * order_items.unit_price AS item_total 
FROM orders JOIN users ON orders.customer_id = users.id JOIN order_items ON orders.id = order_items.order_id JOIN products ON order_items.product_id = products.id': pattern=JoinWithWhere, cache_result=false, supports_binary=true
[2m2025-07-24T05:27:30.601992Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache returned 6 columns and 0 rows
[2m2025-07-24T05:27:30.601997Z[0m [32m INFO[0m [2mpgsqlite::session::db_handler[0m[2m:[0m Enhanced cache succeeded for query: SELECT orders.id AS orders_id, users.username AS users_username, products.name AS products_name, order_items.quantity AS order_items_quantity, order_items.unit_price AS order_items_unit_price, order_items.quantity * order_items.unit_price AS item_total 
FROM orders JOIN users ON orders.customer_id = users.id JOIN order_items ON orders.id = order_items.order_id JOIN products ON order_items.product_id = products.id
[2m2025-07-24T05:27:30.603455Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Table name extraction result: Some("orders") for query: SELECT orders.id AS orders_id, users.username AS users_username, products.name AS products_name, order_items.quantity AS order_items_quantity, order_items.unit_price AS order_items_unit_price, order_items.quantity * order_items.unit_price AS item_total 
FROM orders JOIN users ON orders.customer_id = users.id JOIN order_items ON orders.id = order_items.order_id JOIN products ON order_items.product_id = products.id
[2m2025-07-24T05:27:30.603480Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found table name 'orders', looking up schema for 6 columns
[2m2025-07-24T05:27:30.615213Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type inference: Found schema type for 'orders.id' (via SELECT mapping orders_id) -> SERIAL
[2m2025-07-24T05:27:30.658878Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m About to convert array data for 0 rows
[2m2025-07-24T05:27:30.658923Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Type OIDs for conversion: [23, 25, 25, 25, 25, 701]
[2m2025-07-24T05:27:30.658940Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Boolean type OID: 16
[2m2025-07-24T05:27:30.658946Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Completed array data conversion
[2m2025-07-24T05:27:30.659305Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Received query from 127.0.0.1:53288: ROLLBACK
[2m2025-07-24T05:27:30.659321Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Executing query: ROLLBACK
[2m2025-07-24T05:27:30.659403Z[0m [32m INFO[0m [2mpgsqlite::query::executor[0m[2m:[0m Query type detected: Rollback for query: ROLLBACK
[2m2025-07-24T05:27:30.661871Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Client 127.0.0.1:53288 requested termination
[2m2025-07-24T05:27:30.661889Z[0m [32m INFO[0m [2mpgsqlite[0m[2m:[0m Connection from 127.0.0.1:53288 closed

name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 'stable'
    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        # Cache key differentiation
        key: "v1-single"
        cache-directories: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
    - name: Install PostgreSQL client
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client
    - name: Build and test with disk cleanup
      run: |
        # Build release
        echo "Building release binary..."
        cargo build --release --verbose

        # Clean up debug artifacts immediately after build
        echo "Cleaning up debug artifacts to save disk space..."
        rm -rf target/debug/
        find target/ -name "*.d" -delete
        find target/ -name "*.o" -delete
        find target/release/deps/ -type f ! -name "*.rlib" -delete 2>/dev/null || true

        # Show disk usage
        df -h

        # Run unit tests
        echo "Running unit tests..."
        cargo test --release --verbose --jobs 8

        # Clean up test artifacts
        echo "Cleaning up test artifacts..."
        find target/ -name "*-*" -type f -path "*/deps/*" -delete 2>/dev/null || true

        # Show disk usage after tests
        df -h
      env:
        CARGO_BUILD_JOBS: 8
    - name: Install bc (for test timing calculations)
      run: sudo apt-get install -y bc
    - name: Run integration tests - TCP with SSL
      run: |
        chmod +x tests/runner/run_ssl_tests.sh
        ./tests/runner/run_ssl_tests.sh --mode tcp-ssl
    - name: Run integration tests - TCP without SSL
      run: ./tests/runner/run_ssl_tests.sh --mode tcp-no-ssl
    - name: Run integration tests - Unix socket
      run: ./tests/runner/run_ssl_tests.sh --mode unix-socket
    - name: Run integration tests - File DB with SSL
      run: ./tests/runner/run_ssl_tests.sh --mode file-ssl
    - name: Run integration tests - File DB without SSL
      run: ./tests/runner/run_ssl_tests.sh --mode file-no-ssl

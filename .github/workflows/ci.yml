name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 'stable'
    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        # Cache key differentiation
        key: "v1-build"
        cache-directories: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
    - name: Build release
      run: |
        # Build only in release mode to save space
        cargo build --release --verbose
      env:
        CARGO_BUILD_JOBS: 8
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-binary
        path: target/release/pgsqlite
        retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 'stable'
    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        # Cache key differentiation
        key: "v1-test"
        cache-directories: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
    - name: Install PostgreSQL client
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-binary
        path: target/release/
    - name: Make binary executable
      run: chmod +x target/release/pgsqlite
    - name: Run unit tests
      run: |
        # Run tests with minimal parallelism
        cargo test --release --verbose --jobs 8
      env:
        CARGO_BUILD_JOBS: 8
    - name: Install bc (for test timing calculations)
      run: sudo apt-get install -y bc
    - name: Run integration tests - TCP with SSL
      run: |
        chmod +x tests/runner/run_ssl_tests.sh
        ./tests/runner/run_ssl_tests.sh --mode tcp-ssl
    - name: Run integration tests - TCP without SSL
      run: ./tests/runner/run_ssl_tests.sh --mode tcp-no-ssl
    - name: Run integration tests - Unix socket
      run: ./tests/runner/run_ssl_tests.sh --mode unix-socket
    - name: Run integration tests - File DB with SSL
      run: ./tests/runner/run_ssl_tests.sh --mode file-ssl
    - name: Run integration tests - File DB without SSL
      run: ./tests/runner/run_ssl_tests.sh --mode file-no-ssl
